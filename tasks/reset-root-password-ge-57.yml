# tasks file for percona-server-tools
---
- name: reset root password | stop service
  service:
    name: mysql
    state: stopped
  tags:
    - percona-server-tools-reset-root-password-ge-57-stop-service

- name: reset root password | create init-file
  copy:
    dest: "{{ percona_server_tools_my_init_file }}"
    content: |
      UPDATE `mysql`.`user` SET `authentication_string` = PASSWORD('{{ percona_server_tools_reset_root_password.root_password }}'), plugin = 'mysql_native_password' WHERE `User` = 'root';
      FLUSH PRIVILEGES;
    owner: root
    group: "{{ percona_server_tools_mysqld_user }}"
    mode: 0640
    force: true
  tags:
    - percona-server-tools-reset-root-password-ge-57-init-file-create

- name: reset root password | copy my.cnf
  command: >
    cp -av {{ percona_server_tools_my_cnf_file }} {{ percona_server_tools_my_cnf_file_safe }}
  register: _my_cnf_copy
  changed_when: _my_cnf_copy.stdout_lines | length > 0
  tags:
    - percona-server-tools-reset-root-password-ge-57-my-cnf-copy

- name: reset root password | make my.cnf safe
  lineinfile:
    path: "{{ percona_server_tools_my_cnf_file_safe }}"
    state: absent
    regexp: "{{ item }}"
  with_items: "{{ percona_server_tools_reset_root_password.unsafe_variables | default([]) }}"
  tags:
    - percona-server-tools-reset-root-password-ge-57-my-cnf-safe

- name: reset root password | start service without grants and networking
  command: >
    timeout --preserve-status {{ percona_server_tools_mysqld_start_timeout }}s mysqld \
      --defaults-file={{ percona_server_tools_my_cnf_file_safe }} \
      --init-file={{ percona_server_tools_my_init_file }} \
      --skip-grant-tables \
      --skip-networking \
      --user="{{ percona_server_tools_mysqld_user }}"
  async: "{{ (percona_server_tools_mysqld_start_timeout | int) * 10 }}"
  poll: 0
  register: _mysqld_sleeper
  changed_when: false
  tags:
    - percona-server-tools-reset-root-password-ge-57-start-service

- name: reset root password | wait for service to finish
  async_status:
    jid: "{{ _mysqld_sleeper.ansible_job_id }}"
  register: _mysqld_sleeper_result
  until: _mysqld_sleeper_result.finished
  retries: "{{ (percona_server_tools_mysqld_start_timeout | int) * 10 }}"
  delay: 1
  tags:
    - percona-server-tools-reset-root-password-ge-57-end-service

- name: reset root password | cleanup tmp files
  file:
    path: "{{ item }}"
    state: absent
  with_items:
    - "{{ percona_server_tools_my_cnf_file_safe }}"
    - "{{ percona_server_tools_my_init_file }}"
  tags:
    - percona-server-tools-reset-root-password-ge-57-cleanup

- name: reset root password | start service
  service:
    name: mysql
    state: started
  tags:
    - percona-server-tools-reset-root-password-ge-57-start-service
