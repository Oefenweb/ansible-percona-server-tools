# tasks file for percona-server-tools
---
- name: reset root password | get mysql version
  shell: >
    mysqld --version | sed -ne 's/[^0-9]*\(\([0-9]\.\)\{0,4\}[0-9][^.]\).*/\1/p'
  register: _mysql_version
  changed_when: false
  tags:
    - percona-server-tools-reset-root-password-get-mysql-version

- block:

  - name: reset root password | flush privileges
    command: >
      mysql --defaults-file=/etc/mysql/debian.cnf --database=mysql -e "FLUSH PRIVILEGES;"
    changed_when: false
    tags:
      - percona-server-tools-reset-root-password-flush-privileges

  - name: reset root password | login as debian-sys-maint and reset root password
    command: >
      mysql \
        --defaults-file=/etc/mysql/debian.cnf \
        --database=mysql \
        -e "UPDATE `user` SET `Password` = PASSWORD('{{ percona_server_tools_reset_root_password.root_password }}') WHERE `User` = 'root'; SELECT ROW_COUNT();" \
        --skip-column-names
    register: _rows_affected
    changed_when: "_rows_affected.stdout != '0'"

  - name: reset root password | flush privileges
    command: >
      mysql --defaults-file=/etc/mysql/debian.cnf --database=mysql -e "FLUSH PRIVILEGES;"
    changed_when: false
    tags:
      - percona-server-tools-reset-root-password-flush-privileges

  when: _mysql_version.stdout is version('5.7', '<')
  tags:
    - percona-server-tools-reset-root-password-lt-57

- block:
  - name: reset root password | get socket
    mysql_variables:
      variable: socket
    register: _socket_value
    tags:
      - percona-server-tools-reset-root-password-get-socket

  - name: reset root password | stop service
    service:
      name: mysql
      state: stopped
    tags:
      - percona-server-tools-reset-root-password-stop-service

  - name: reset root password | start service without grants and networking
    command: >
      timeout --preserve-status 30s mysqld --skip-grant-tables --skip-networking --user=mysql
    async: 1000
    poll: 0
    register: _mysqld_sleeper
    changed_when: false
    tags:
      - percona-server-tools-reset-root-password-start-service

  - name: reset root password | wait for socket
    wait_for:
      path: "{{ _socket_value.msg }}"
      state: present
    tags:
      - percona-server-tools-reset-root-password-wait-for-socket

  - name: reset root password | set password
    command: >
      mysql \
        --database=mysql \
        -e "UPDATE `user` SET `authentication_string` = PASSWORD('{{ percona_server_tools_reset_root_password.root_password }}'), plugin = 'mysql_native_password' WHERE `User` = 'root'; SELECT ROW_COUNT();" \
        --skip-column-names
    register: _rows_affected
    changed_when: "_rows_affected.stdout != '0'"
    tags:
      - percona-server-tools-reset-root-password-set-password

  - name: reset root password | flush privileges
    command: >
      mysql --database=mysql -e "FLUSH PRIVILEGES;"
    changed_when: false
    tags:
      - percona-server-tools-reset-root-password-flush-privileges

  - name: reset root password | wait for service to finish
    async_status:
      jid: "{{ _mysqld_sleeper.ansible_job_id }}"
    register: _mysqld_sleeper_result
    until: _mysqld_sleeper_result.finished
    retries: 30
    tags:
      - percona-server-tools-reset-root-password-end-service

  - name: reset root password | start service
    service:
      name: mysql
      state: started
    tags:
      - percona-server-tools-reset-root-password-start-service

  when: _mysql_version.stdout is version('5.7', '>=')
  tags:
    - percona-server-tools-reset-root-password-ge-57
